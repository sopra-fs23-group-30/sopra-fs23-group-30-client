{"ast":null,"code":"var _jsxFileName = \"/Users/rafaelestermann/Desktop/sopra/sopra-fs23-group-30-client/src/components/routing/routeProtectors/LoginGuard.js\",\n  _this = this;\nimport PropTypes from \"prop-types\";\n\n/**\n *\n * Another way to export directly your functional component.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var LoginGuard = function LoginGuard(props) {\n  if (!localStorage.getItem(\"token\")) {\n    return props.children;\n  }\n  // if user is already logged in, redirects to the main /app\n  return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/game\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, _this);\n};\n_c = LoginGuard;\nLoginGuard.propTypes = {\n  children: PropTypes.node\n};\nvar _c;\n$RefreshReg$(_c, \"LoginGuard\");","map":{"version":3,"names":["PropTypes","jsxDEV","_jsxDEV","LoginGuard","props","localStorage","getItem","children","Redirect","to","fileName","_jsxFileName","lineNumber","columnNumber","_this","_c","propTypes","node","$RefreshReg$"],"sources":["/Users/rafaelestermann/Desktop/sopra/sopra-fs23-group-30-client/src/components/routing/routeProtectors/LoginGuard.js"],"sourcesContent":["import PropTypes from \"prop-types\";\n\n/**\n *\n * Another way to export directly your functional component.\n */\nexport const LoginGuard = (props) => {\n  if (!localStorage.getItem(\"token\")) {\n    return props.children;\n  }\n  // if user is already logged in, redirects to the main /app\n  return <Redirect to=\"/game\" />;\n};\n\nLoginGuard.propTypes = {\n  children: PropTypes.node,\n};\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;;AAElC;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIC,KAAK,EAAK;EACnC,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;IAClC,OAAOF,KAAK,CAACG,QAAQ;EACvB;EACA;EACA,oBAAOL,OAAA,CAACM,QAAQ;IAACC,EAAE,EAAC;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,GAAAC,KAAA,CAAG;AAChC,CAAC;AAACC,EAAA,GANWZ,UAAU;AAQvBA,UAAU,CAACa,SAAS,GAAG;EACrBT,QAAQ,EAAEP,SAAS,CAACiB;AACtB,CAAC;AAAC,IAAAF,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}