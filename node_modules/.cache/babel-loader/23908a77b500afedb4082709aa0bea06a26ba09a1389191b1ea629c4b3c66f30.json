{"ast":null,"code":"import _objectSpread from \"/Users/rafaelestermann/Desktop/sopra/sopra-fs23-group-30-client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/rafaelestermann/Desktop/sopra/sopra-fs23-group-30-client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"/Users/rafaelestermann/Desktop/sopra/sopra-fs23-group-30-client/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"children\"];\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { AccordionPanelContext } from './AccordionPanelContext';\nexport var AccordionPanel = function AccordionPanel(_ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var alwaysOpen = props.alwaysOpen;\n  var _useState = useState(props.isOpen),\n    _useState2 = _slicedToArray(_useState, 2),\n    isOpen = _useState2[0],\n    _setOpen = _useState2[1];\n  var provider = alwaysOpen ? _objectSpread(_objectSpread({}, props), {}, {\n    isOpen: isOpen,\n    setOpen: function setOpen() {\n      return _setOpen(!isOpen);\n    }\n  }) : props;\n  return _jsx(AccordionPanelContext.Provider, {\n    value: provider,\n    children: children\n  });\n};","map":{"version":3,"names":["jsx","_jsx","useState","AccordionPanelContext","AccordionPanel","_ref","children","props","_objectWithoutProperties","_excluded","alwaysOpen","_useState","isOpen","_useState2","_slicedToArray","setOpen","provider","_objectSpread","Provider","value"],"sources":["/Users/rafaelestermann/Desktop/sopra/sopra-fs23-group-30-client/node_modules/flowbite-react/lib/esm/components/Accordion/AccordionPanel.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { AccordionPanelContext } from './AccordionPanelContext';\nexport const AccordionPanel = ({ children, ...props }) => {\n    const { alwaysOpen } = props;\n    const [isOpen, setOpen] = useState(props.isOpen);\n    const provider = alwaysOpen\n        ? {\n            ...props,\n            isOpen,\n            setOpen: () => setOpen(!isOpen),\n        }\n        : props;\n    return _jsx(AccordionPanelContext.Provider, { value: provider, children: children });\n};\n"],"mappings":";;;;AAAA,SAASA,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAA+B;EAAA,IAAzBC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAKC,KAAK,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;EAC/C,IAAQC,UAAU,GAAKH,KAAK,CAApBG,UAAU;EAClB,IAAAC,SAAA,GAA0BT,QAAQ,CAACK,KAAK,CAACK,MAAM,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAzCC,MAAM,GAAAC,UAAA;IAAEE,QAAO,GAAAF,UAAA;EACtB,IAAMG,QAAQ,GAAGN,UAAU,GAAAO,aAAA,CAAAA,aAAA,KAEhBV,KAAK;IACRK,MAAM,EAANA,MAAM;IACNG,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMA,QAAO,CAAC,CAACH,MAAM,CAAC;IAAA;EAAA,KAEjCL,KAAK;EACX,OAAON,IAAI,CAACE,qBAAqB,CAACe,QAAQ,EAAE;IAAEC,KAAK,EAAEH,QAAQ;IAAEV,QAAQ,EAAEA;EAAS,CAAC,CAAC;AACxF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}